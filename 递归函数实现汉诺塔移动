递归函数的编写思路：
1、首先要从最基础的情况开始递推。
2、找出各次调用函数过程之间的递归关系。
3、然后利用程序语言将最基础情况以及递归过程表达出来

eg:汉诺塔移动规则:
     1.一次性只能移动柱子最上面的一个圆盘
     2.小盘上面不能放大盘

另:
    (1, 2, 3表示盘号)
    (A, B, C表示柱号)
    (a为起始柱, b为中转柱, c为目标柱)
    
    首先从最基本的开始：
    1个盘位于A，将1直接移动到目标C，只需要一步；将该过程设为P1（a,c）
    2个盘位于A，将1移动到B [P1(a,b)],再将2移动到C，最后将1移动到C，需要3步；将该过程设为P2(a,c)=P1(a,b)+P1(a,c)+P1(b,c)
    3个盘位于A，将1、2移动到B [P2(a,b)],这一步将挡雨重复P2过程，只不过是将1、2的目的柱设置为了中转柱。再将3移动到C，
最后再次调用P2(b,c),再将3移动到C；将该过程设为P3(a,c)=P2(a,b)+P1(a,c)+P2(b,c)
    4个盘位于A，同上整个过程可简写为：P3(a,b)+P1(b,c)+P3(b,c)
    5个盘位于A，过程为：P4(a,b)+P1(a,c)+P4(b,c)
    由此可以看出程序递归的思路:
    
def mov(n,a,b,c): #n为盘子个数 a为起始柱, b为中转柱, c为目标柱
    if n==1:  #P1过程
        print(a,'-->',c)
    else:
        mov(n-1,a,c,b)
        mov(1,a,b,c)
        mov(n-1,b,a,c)
mov(3,'a','b','c')
